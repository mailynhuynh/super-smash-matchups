{"version":3,"sources":["serviceWorker.js","components/Cards/index.js","components/Slots/index.js","components/Stats/Stats.js","components/Spinner/Spinner.js","components/svg.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Cards","_ref","id","image","handler","name","filled","react_default","a","createElement","className","onClick","src","alt","Slot","_this$props","this","props","Component","Stats","slot1","slot2","universe","tier","air_speed","dash_speed","fall_speed","run_speed","weight","spirits","primary","slot_1","slot_2","slot_3","unlock","wofl","vs_mode","classic_mode","Spinner","text","IconDownArrow","version","xmlns","x","y","width","height","viewBox","d","projectId","config","apiKey","authDomain","concat","databaseURL","storageBucket","firebase","initializeApp","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","listenToScroll","e","_this$state$keyArray","state","keyArray","key1","key2","statsScroll","_reactInternalFiber","child","stateNode","offsetTop","pageYOffset","setState","prevState","objectSpread","displayAnim","handleSelection","key","_prevState$keyArray","updateSlots","_prevState$keyArray2","slotsFilled","arr","char","character","status","fetched","_this2","storage","ref","_loop","getDownloadURL","then","url","newArr","toConsumableArray","catch","error","console","log","addEventListener","removeEventListener","_this3","_this$state","characters","chars","i","length","push","components_Cards","toString","selectedCard","filter","card","selectedCard2","settings","infinite","speed","slidesToShow","slidesToScroll","focusOnSelect","responsive","breakpoint","renderStats","style","padding","lib_default","map","Slots","svg_IconDownArrow","components_Stats_Stats","components_Spinner_Spinner","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ee80732.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Cards = ({ id, image, handler, name, filled }) => {\n    return (\n        <div\n            className={filled ? `card filled` : \"card\"}\n            onClick={filled ? null : () => handler(id)}\n        >\n            <div className={`card-content`}>\n                <img src={image} alt={name} />\n                <div className=\"card-body\">\n                    <span className=\"name\">{name}</span>\n                </div>\n            </div>\n            <div className={filled ? `overlay` : null} />\n        </div>\n    );\n};\n\nexport default Cards;\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\n\nclass Slot extends Component {\n    render() {\n        const { id, name } = this.props;\n        return <div id={id}>{name}</div>;\n    }\n}\n\nexport default Slot;\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\n\nclass Stats extends Component {\n    render() {\n        const { slot1, slot2 } = this.props;\n        return (\n            <div id=\"statistics\">\n                <div className=\"main-container stats\">\n                    <div className=\"row\">\n                        <span className=\"name\">Universe</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.universe}</span>\n                            <span className=\"results\">{slot2.universe}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Tier</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.tier}</span>\n                            <span className=\"results\">{slot2.tier}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Air Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.air_speed}</span>\n                            <span className=\"results\">{slot2.air_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Dash Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.dash_speed}</span>\n                            <span className=\"results\">{slot2.dash_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Fall Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.fall_speed}</span>\n                            <span className=\"results\">{slot2.fall_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Run Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.run_speed}</span>\n                            <span className=\"results\">{slot2.run_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Weight</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.weight}</span>\n                            <span className=\"results\">{slot1.weight}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Best Spirit Combination</span>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Primary Slot</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[0].primary}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[0].primary}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Slot 1</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[1].slot_1}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[1].slot_1}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Slot 2</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[2].slot_2}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[2].slot_2}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Slot 3</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[3].slot_3}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[3].slot_3}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">How To Unlock</span>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">World of Light</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.unlock[0].wofl}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.unlock[0].wofl}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Versus Mode</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.unlock[2].vs_mode}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.unlock[2].vs_mode}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Classic Mode</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.unlock[1].classic_mode}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.unlock[1].classic_mode}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Moves</span>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Classic Mode</div>\n                            <div className=\"results\" />\n                            <div className=\"results\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Stats;\n","import React from \"react\";\n\n// Styles\nimport \"./style.scss\"\n\nconst Spinner = ({ text }) => {\n    return (\n        <div className=\"loading-container\">\n            <div className=\"spinner\">\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n            </div>\n            <p>{text}</p>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nexport const IconDownArrow = () => {\n    return (\n        <svg\n            version=\"1.1\"\n            id=\"Capa_1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"24px\"\n            height=\"32px\"\n            viewBox=\"0 0 444.819 444.819\"\n        >\n            <g>\n                <path\n                    d=\"M434.252,185.721l-21.409-21.413c-7.419-7.042-16.084-10.564-25.975-10.564c-10.095,0-18.657,3.521-25.7,10.564\n\t\tl-83.938,83.939V47.255c0-9.9-3.621-18.464-10.855-25.697c-7.234-7.232-15.797-10.85-25.693-10.85h-36.545\n\t\tc-9.897,0-18.464,3.621-25.693,10.85c-7.236,7.233-10.85,15.797-10.85,25.697v200.992l-83.939-83.939\n\t\tc-7.042-7.042-15.606-10.564-25.697-10.564c-9.896,0-18.559,3.521-25.979,10.564l-21.128,21.413C3.615,192.948,0,201.615,0,211.7\n\t\tc0,10.282,3.619,18.848,10.848,25.698l185.864,186.146c7.045,7.046,15.609,10.567,25.697,10.567\n\t\tc9.897,0,18.558-3.521,25.977-10.567l185.865-186.146c7.043-7.043,10.567-15.608,10.567-25.698\n\t\tC444.819,201.805,441.295,193.145,434.252,185.721z\"\n                />\n            </g>\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n        </svg>\n    );\n};\n","import React, { Component } from \"react\";\n\nimport Cards from \"./components/Cards/index\";\nimport Slot from \"./components/Slots/index\";\nimport char from \"./data/characters.json\";\nimport Slider from \"react-slick\";\nimport \"./base.scss\";\nimport Stats from \"./components/Stats/Stats\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\nimport firebase from \"firebase\";\nimport { IconDownArrow } from \"./components/svg\";\n\nconst projectId = \"super-smash-matchups\";\n\nvar config = {\n    apiKey: \"AIzaSyDUAeMJRPkI2Rn5cgujTRzWupryJmo-J4o\",\n    authDomain: `${projectId}.firebaseapp.com`,\n    databaseURL: `${projectId}.firebaseio.com`,\n    storageBucket: `${projectId}.appspot.com`\n};\nfirebase.initializeApp(config);\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slotsFilled: 0,\n            arr: char.character,\n            status: \"\",\n            keyArray: { key1: null, key2: null },\n            filled: false,\n            fetched: false,\n            displayAnim: false\n        };\n    }\n\n    componentDidMount() {\n        const { arr } = this.state;\n        const storage = firebase.storage().ref();\n\n        for (let key in arr) {\n            const storageRef = storage.child(`img/${arr[key].name}.png`);\n\n            storageRef\n                .getDownloadURL()\n                .then(url => {\n                    const newArr = [...arr];\n                    newArr[key].image = url;\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            fetched: true,\n                            arr: newArr\n                        };\n                    });\n                })\n                .catch(function(error) {\n                    console.log({ error });\n                });\n        }\n\n        window.addEventListener(\"scroll\", this.listenToScroll);\n    }\n\n    listenToScroll = e => {\n        const { key1, key2 } = this.state.keyArray;\n        if (key1 !== null && key2 !== null) {\n            const statsScroll = this.Stats._reactInternalFiber.child.stateNode\n                .offsetTop;\n            if (window.pageYOffset > statsScroll) {\n                this.setState(prevState => {\n                    return { ...prevState, displayAnim: false };\n                });\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.listenToScroll);\n    }\n\n    handleSelection = key => {\n        this.setState(prevState => {\n            const { key1, key2 } = prevState.keyArray;\n            if (key1 !== key && key1 !== null && key2 === null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1, key2: key },\n                    filled: true,\n                    displayAnim: true\n                };\n            } else if (key1 !== null && key2 !== null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1, key2 },\n                    filled: true,\n                    displayAnim: true\n                };\n            } else if (key2 !== key && key2 !== null && key1 === null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1: key, key2 },\n                    filled: true,\n                    displayAnim: true\n                };\n            } else if (key1 === null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1: key, key2: null },\n                    filled: false\n                };\n            }\n            return;\n        });\n    };\n\n    updateSlots = key => {\n        this.setState(prevState => {\n            const { key1, key2 } = prevState.keyArray;\n            if (key1 === key) {\n                return {\n                    ...prevState,\n                    keyArray: { key1: null, key2 },\n                    filled: false\n                };\n            }\n            return {\n                ...prevState,\n                keyArray: { key2: null, key1 },\n                filled: false\n            };\n        });\n    };\n\n    render() {\n        const { arr, keyArray, filled, fetched, displayAnim } = this.state;\n        let characters = [];\n        let chars = [];\n\n        for (let i = 0; i < arr.length; i++) {\n            characters.push(\n                <Cards\n                    key={arr[i].name.toString()}\n                    id={i}\n                    name={arr[i].name}\n                    handler={this.handleSelection}\n                    image={arr[i].image}\n                    filled={filled}\n                />\n            );\n            chars.push(\n                <Cards\n                    key={arr[i].name.toString()}\n                    id={i}\n                    name={arr[i].name}\n                    handler={this.updateSlots}\n                    image={arr[i].image}\n                />\n            );\n        }\n\n        let selectedCard = \"\";\n        if (keyArray.key1 !== null) {\n            // eslint-disable-next-line\n            selectedCard = chars.filter(card => {\n                if (card.props.id === keyArray.key1) {\n                    return card;\n                }\n            });\n        }\n        let selectedCard2 = \"\";\n        if (keyArray.key2 !== null) {\n            // eslint-disable-next-line\n            selectedCard2 = chars.filter(card => {\n                if (card.props.id === keyArray.key2) {\n                    return card;\n                }\n            });\n        }\n\n        const settings = {\n            infinite: true,\n            speed: 300,\n            slidesToShow: 5,\n            slidesToScroll: 5,\n            focusOnSelect: filled ? false : true,\n            responsive: [\n                {\n                    breakpoint: 1540,\n                    settings: {\n                        slidesToShow: 4,\n                        slidesToScroll: 4\n                    }\n                },\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 3,\n                        slidesToScroll: 3\n                    }\n                },\n                {\n                    breakpoint: 860,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 2\n                    }\n                },\n                {\n                    breakpoint: 520,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        };\n\n        const renderStats = keyArray.key1 !== null && keyArray.key2 !== null;\n\n        if (!fetched) {\n            return <Spinner text={\"Loading...\"} />;\n        }\n        return (\n            <div>\n                <header>\n                    <div className=\"main-container\">\n                        <h2>Super Smash Bros Matchups</h2>\n                    </div>\n                </header>\n                <div className=\"main-container images\">\n                    <p>\n                        Compare characters from the Super Smash Bros. Ultimate\n                        character list\n                    </p>\n                    <h2>Choose two characters:</h2>\n                    <div style={{ padding: \"30px\" }}>\n                        <Slider {...settings}>\n                            {characters.map(character => {\n                                return (\n                                    <div\n                                        className=\"characters\"\n                                        key={character.props.id}\n                                    >\n                                        {character}\n                                    </div>\n                                );\n                            })}\n                        </Slider>\n                    </div>\n                    <div className=\"slots\">\n                        <h2>Selected Characters:</h2>\n                        {keyArray.key1 !== null || keyArray.key2 !== null ? (\n                            <p>Click on a slot to remove a character</p>\n                        ) : null}\n                        <Slot name={selectedCard} id=\"slot-1\" />\n                        <Slot name={selectedCard2} id=\"slot-2\" />\n                    </div>\n                    {renderStats && displayAnim ? (\n                        <div className=\"arrow bounce\">\n                            <IconDownArrow />\n                        </div>\n                    ) : null}\n                </div>\n\n                {renderStats ? (\n                    <Stats\n                        ref={ref => (this.Stats = ref)}\n                        slot1={arr[keyArray.key1]}\n                        slot2={arr[keyArray.key2]}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}